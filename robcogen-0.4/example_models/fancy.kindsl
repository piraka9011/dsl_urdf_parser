/*
 * This file is a document of the Kinematics-DSL.
 * It contains the description of a fictitious robot model.
 *
 * This file is part of the binary distribution of the Robotics Code Generator (RobCoGen).
 *
 * Copyright Â© 2015, Marco Frigerio. All rights reserved.
 */

Robot Fancy {

/*
 * Kinematic chain without branches.
 * All the links are hollow cylinders infinitely thin (internal
 * and external radii are the same) with radius equal to 0.05 meters,
 * unit length, unit mass.
 * They are connected by five joints: revolute, prismatic, revolute,
 * prismatic, revolute.
 */

RobotBase FancyBase {
	inertia_properties { // the base inertia is irrelevant for a fixed base robot
		mass = 1.0
		CoM = (0.0, 0.0, 0.0)
		Iy=0.0	Ix=0.0	Ixy=0.0	Iz=0.0	Ixz=0.0	Iyz=0.0
	}
	children {
		link1 via jA
	}
}

link link1 {
	id = 1
	inertia_properties {
		mass = 1.0
		CoM = (0.5, .0, .0)
		Ix=0.0025  Iy=0.33458  Iz=0.33458  Ixy=0.0  Ixz=0.0  Iyz=0.0
	}

	children {
		link2 via jB
	}
}


link link2 {
	id = 2
	inertia_properties {
		mass = 1.0
		CoM = (0.0, 0.0, 0.5)
		Ix=0.33458  Iy=0.33458  Iz=0.0025  Ixy=0.0  Ixz=0.0  Iyz=0.0
	}

	children {
		link3 via jC
	}
}


link link3 {
	id = 3
	inertia_properties {
		mass = 1.0
		CoM = (0.5, .0, .0)
		Ix=0.0025  Iy=0.33458  Iz=0.33458  Ixy=0.0  Ixz=0.0  Iyz=0.0
	}

	children {
		link4 via jD
	}
}

link link4 {
	id = 4
	inertia_properties {
		mass = 1.0
		CoM = (0.0, 0.0, 0.5)
		Ix=0.33458  Iy=0.33458  Iz=0.0025  Ixy=0.0  Ixz=0.0  Iyz=0.0
	}

	children {
		link5 via jE
	}
}

link link5 {
	id = 5
	inertia_properties {
		mass = 1.0
		CoM = (0.5, .0, .0)
		Ix=0.0025  Iy=0.33458  Iz=0.33458  Ixy=0.0  Ixz=0.0  Iyz=0.0
	}

	children {}
	frames {
	   ee {
	       translation = (ee_x, 0.0, 0.0)
	       rotation    = (0.0, 0.0, 0.0)
	   }
	}
}

r_joint jA {
	ref_frame {
		translation = (0.0, 0.0, 0.0)
		rotation = (0.0, 0.0, 0.0)
	}
}

p_joint jB {
	ref_frame {
		translation = (1.0, 0.0, 0.0)
		rotation = (-PI/2.0, 0.0, 0.0)
	}
}

r_joint jC {
	ref_frame {
		translation = (0.0, 0.0, 1.0)
		rotation = (0.0, 0.0, 0.0)
	}
}
p_joint jD {
	ref_frame {
		translation = (1.0, 0.0, 0.0)
		rotation = (PI/2.0, 0.0, 0.0)
	}
}

r_joint jE {
	ref_frame {
		translation = (0.0, 0.0, 1.0)
		rotation = (0.0, 0.0, 0.0)
	}
}


}
